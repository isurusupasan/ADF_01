{
	"name": "transformSalary_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "OutputSqlDataset",
						"type": "DatasetReference"
					},
					"name": "salary"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable4",
						"type": "DatasetReference"
					},
					"name": "sink"
				}
			],
			"transformations": [
				{
					"name": "filterMinSalary",
					"description": "toFloat(min_salary) >= 50000"
				},
				{
					"name": "AggregateTotalSalary"
				}
			],
			"scriptLines": [
				"parameters{",
				"     pPayPeriod as string",
				"}",
				"source(output(",
				"          salary_id as integer,",
				"          job_id as string,",
				"          max_salary as double,",
				"          med_salary as double,",
				"          min_salary as double,",
				"          pay_period as string,",
				"          currency as string,",
				"          compensation_type as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> salary",
				"salary filter((isNull($pPayPeriod) || pay_period == $pPayPeriod) && toFloat(min_salary) >= 50000) ~> filterMinSalary",
				"filterMinSalary aggregate(groupBy(pay_period),",
				"     totalMaxSalary = sum(toFloat(max_salary))) ~> AggregateTotalSalary",
				"AggregateTotalSalary sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink"
			]
		}
	}
}