{
	"name": "Split_tables_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "OutputSqlDataset",
						"type": "DatasetReference"
					},
					"name": "salary"
				},
				{
					"dataset": {
						"referenceName": "OutputSqlDataset",
						"type": "DatasetReference"
					},
					"name": "salary1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlJobTable",
						"type": "DatasetReference"
					},
					"name": "sink"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "jobtable"
				},
				{
					"name": "removeduplicates"
				},
				{
					"name": "salarytable"
				}
			],
			"scriptLines": [
				"source(output(",
				"          salary_id as integer,",
				"          job_id as string,",
				"          max_salary as double,",
				"          med_salary as double,",
				"          min_salary as double,",
				"          pay_period as string,",
				"          currency as string,",
				"          compensation_type as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> salary",
				"source(output(",
				"          salary_id as integer,",
				"          job_id as string,",
				"          max_salary as double,",
				"          med_salary as double,",
				"          min_salary as double,",
				"          pay_period as string,",
				"          currency as string,",
				"          compensation_type as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> salary1",
				"salary select(mapColumn(",
				"          salary_id,",
				"          job_id,",
				"          pay_period,",
				"          compensation_type",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> jobtable",
				"salary1 aggregate(groupBy(max_salary,",
				"          med_salary,",
				"          min_salary,",
				"          currency),",
				"     salary_id = first(salary_id)) ~> removeduplicates",
				"removeduplicates select(mapColumn(",
				"          max_salary,",
				"          med_salary,",
				"          min_salary,",
				"          currency,",
				"          salary_id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> salarytable",
				"jobtable sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink",
				"salarytable sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}